<?xml version="1.0" encoding="UTF-8"?>
<Configuration status="WARN">
<!-- 
	关于日志level,共有8个级别，按照从低到高为：All < Trace < Debug < Info < Warn < Error < Fatal < OFF.
　　　　　　All:最低等级的，用于打开所有日志记录.
　　　　　　Trace:是追踪，就是程序推进以下，你就可以写个trace输出，所以trace应该会特别多，不过没关系，我们可以设置最低日志级别不让他输出.
　　　　　　Debug:指出细粒度信息事件对调试应用程序是非常有帮助的.
　　　　　　Info:消息在粗粒度级别上突出强调应用程序的运行过程.
　　　　　　Warn:输出警告及warn以下级别的日志.
　　　　　　Error:输出错误信息日志.
　　　　　　Fatal:输出每个严重的错误事件将会导致应用程序的退出的日志.
　　　　　　OFF:最高等级的，用于关闭所有日志记录.
 -->

<!-- 1、先定义所有的Appenders -->
	<Appenders>
		<!--输出控制台的配置-->
		<Console name="Console" target="SYSTEM_OUT">
			<PatternLayout pattern="%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n"/>
		</Console>
		
		<!--日志记录到文件,append=true:追加方式记录日志，不会清空;
						  append=false:每次运行程序时，会自动清空，适合临时测试用-->
		<File name="log" fileName="log/test.log" append="true">
			<PatternLayout pattern="%d{HH:mm:ss.SSS} %-5level %class{36} %L %M - %msg%xEx%n"/>
		</File>

		<!-- 这个会打印出所有的info及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
		<RollingFile name="RollingFileInfo" fileName="${sys:user.home}/logs/info.log"
			filePattern="${sys:user.home}/logs/$${date:yyyy-MM}/info-%d{yyyy-MM-dd}-%i.log">
			<!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->        
			<ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
			<PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n"/>
				<Policies>
				<TimeBasedTriggeringPolicy/>
				<SizeBasedTriggeringPolicy size="100 MB"/>
				</Policies>
		</RollingFile>
		
		<!-- 打印所有的warn及以下级别的信息-->
		<RollingFile name="RollingFileWarn" fileName="${sys:user.home}/logs/warn.log"
			filePattern="${sys:user.home}/logs/$${date:yyyy-MM}/warn-%d{yyyy-MM-dd}-%i.log">
			<ThresholdFilter level="warn" onMatch="ACCEPT" onMismatch="DENY"/>
			<PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n"/>
			<Policies>
				<TimeBasedTriggeringPolicy/>
				<SizeBasedTriggeringPolicy size="100 MB"/>
			</Policies>
			<!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件，这里设置了20 -->
			<DefaultRolloverStrategy max="20"/>
		</RollingFile>
		
		<!-- 打印所有的error及以下级别的信息-->
		<RollingFile name="RollingFileError" fileName="${sys:user.home}/logs/error.log" 
		filePattern="${sys:user.home}/logs/$${date:yyyy-MM}/error-%d{yyyy-MM-dd}-%i.log">
			<ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>
			<PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n"/>
			<Policies>
				<TimeBasedTriggeringPolicy/>
				<SizeBasedTriggeringPolicy size="100 MB"/>
			</Policies>
		</RollingFile>
	</Appenders>
	
	<!--然后定义logger，只有定义了logger并引入的appender，appender才会生效-->
	<Loggers>
		<!--过滤掉spring和mybatis的一些无用的DEBUG信息-->
		<logger name="org.springframework" level="INFO"></logger>
		<logger name="org.mybatis" level="INFO"></logger>
		<root level="all">
			<appender-ref ref="Console"/>
			<appender-ref ref="RollingFileInfo"/>
			<appender-ref ref="RollingFileWarn"/>
			<appender-ref ref="RollingFileError"/>
		</root>
	</Loggers>
</Configuration>